# Testprotocol

## Scenario 1

<ul>
<li>Ober A vraagt aan Klant K of hij/zij de kaart wil zien. </li><li>Bij het invullen van de vraag of de klant de kaart wil zien, worden alle verschillende Base Type velden aangeboden.
</li><li>Test of de volgende velden als volgt werken:
<ul>
<li>Boolean
<ul>
<li>Hier moet een vinkjes veldje&nbsp; of 0 - 1 of true-false of waar-onwaar staan (verplicht)
</li></ul>
</li><li>Date / Datum
<ul>
<li>Een datum moet ingevoerd worden (verplicht) </li></ul>
</li><li>Datetime / Datum en tijd
<ul>
<li>Datum en tijd moeten ingevuld worden (verplicht) </li></ul>
</li><li>Time / Tijd
<ul>
<li>Een tijdstip moet ingevoerd worden (verplicht) </li></ul>
</li><li>Decimal / Decimaal
<ul>
<li>Een getal, al dan niet met decimale waarden moet ingevoerd worden (verplicht)
</li></ul>
</li><li>Integer / Geheel getal
<ul>
<li>Een geheel getal moet ingevoerd worden (verplicht) </li></ul>
</li><li>Keuzelijst
<ul>
<li>Een van de waarden moet ingevoerd worden (verplicht)
</li></ul>
</li><li>String / Vrije tekst
<ul>
<li>Willekeurige tekens kunnen ingevoerd worden (niet verplicht) </li></ul>
</li></ul>
</li><li>Klant K beantwoordt de vraag met Nee.</li></ul>

## Scenario 2a

*Doel*
voor a) het starten van een (sub)transactie en b) het terugkeren naar een (hoofd)transactie.

![Afbeelding](media/)

*Beschrijving*
Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.

Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
**niet** wijzigen. Klant K krijgt de gevraagde menukaart. 
Klant K plaatst een bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking.


Ober A plaatst dezelfde bestelling bij Kok X en bij Kok Y. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.


Kok Y geeft Ober A een akkoord. Kok Y kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.


Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok Y niet aanpassen, en ook niet aanvullen.


Nadat Ober A naar Klant K heeft communiceerd geeft Kok X alsnog een akkoord aan Ober A. Ober A kan met de ontvangen melding van Kok X
**helemaal niets**, dus niet communiceren richting Kok x of Klant K. 
Einde

## Scenario 2c

<p>Opmerking GS: Volgens mij is de beschrijving van dit scenario gelijk aan Scenario 2A, het plaatje kbij dit scenario sluit wel beter aan bij de tekst</p>
*Doel*

<p>Testen op de functionaliteit voor a) het starten van twee (sub)transactie en b) het terugkeren van 1 (sub)transactie naar de (hoofd)transactie.</p>

![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K plaatst een bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking.
<br>
Ober A plaatst dezelfde bestelling bij Kok X en bij Kok Y. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok Y geeft Ober A een akkoord. Kok Y kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok Y niet aanpassen, en ook niet aanvullen.
<br>
Nadat Ober A naar Klant K heeft gecommuniceerd geeft Kok X alsnog een niet akkoord aan Ober A. Ober A kan met de ontvangen melding van Kok X
<em>helemaal niets</em>, dus niet communiceren richting Kok X of Klant K. <br>
Einde.</p>


## Scenario 3a

*Doel*
<p>Testen op de functionaliteit voor het starten van een bepaald type (sub)transactie, terugkeren naar de (hoofd)transactie, en weer starten van hetzelfde type (sub)transactie.</p>

![Afbeelding](media/)

*Beschrijving*
Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K plaatst een bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking.
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een niet akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een niet akkoord. Ober A kan het niet akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok Y. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok Y geeft Ober A een akkoord. Kok Y kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok Y niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>


## Scenario 3b

*Doel:*
<p>Testen op de functionaliteit voor het starten van een bepaald type (sub)transactie, terugkeren naar de (hoofd)transactie, meerdere berichten in de hoofdtransactie, en weer starten van hetzelfde type (sub)transactie.</p>

![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K plaatst een bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking.
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een niet akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een niet akkoord. Ober A kan het niet akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Klant K stelt Ober A een vraag. <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok Y. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok Y geeft Ober A een akkoord. Kok Y kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok Y niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>

## Scenario 4a

*Doel*

<p>Testen op de functionaliteit voor ElementConditions.</p>

![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>
<h2>Scenario 4b</h2>
<p><strong>Doel:</strong></p>
<p>Testen op de functionaliteit voor ElementConditions.</p>
<p><strong>Figuur:</strong></p>
<p><strong><img src="http://download-codeplex.sec.s-msft.com/Download?ProjectName=visi&DownloadId=731889" alt=""><br>
</strong></p>
<p><strong>Beschrijving:</strong><br>
Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K stelt een tweede vraag aan Ober A. (In de vraagstelling kan Klant K de vraag
<em>niet</em> invullen, omdat in het raamwerk de ElementCondition <em>geen</em> waarde voor condition heeft!!!)
<br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>

## Scenario 4c

*Doel*
<p>Testen op de functionaliteit voor ElementConditions.</p>


![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K stelt een tweede vraag aan Ober A. (In de vraagstelling kan Klant K de vraag
<em>niet</em> invullen, omdat in het raamwerk de ElementCondition <em>geen</em> waarde voor condition heeft!!!)
<br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K stelt een derde vraag aan Ober A. (In de vraagstelling kan Klant K de vraag
<em>niet</em> invullen, omdat in het raamwerk de ElementCondition <em>geen</em> waarde voor condition heeft!!!)
<br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>

## Scenario 5a

*Doel*
<p>Testen op de functionaliteit voor ElementConditions &amp; openSecondaryTransactionsAllowed.</p>


![Afbeelding](media/)

*Beschrijving*


Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A stelt een vraag aan Kok Z. (In de vraagstelling kan Ober A de vraag <em>niet</em> aanpassen.)
<br>
Kok Z beantwoordt de vraag van Ober A. (In de beantwoording kan Kok Z de vraag van Ober A
<em>niet</em> aanpassen.) <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A het antwoord van Kok Z
<em>niet</em> aanpassen.) <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>

## Scenario 5b

*Doel*
<p>Testen op de functionaliteit voor ElementConditions &amp; openSecondaryTransactionsAllowed.</p>


![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A stelt een vraag aan Kok Y en Z. (In de vraagstelling kan Ober A de vraag <em>
niet</em> aanpassen.) <br>
Kok Y beantwoordt de vraag van Ober A. (In de beantwoording kan Kok Y de vraag van Ober A
<em>niet</em> aanpassen.) <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A het antwoord van Kok Y
<em>niet</em> aanpassen.) <br>
Nadat Ober A naar Klant K heeft gecommuniceerd geeft Kok Z alsnog een antwoord aan Ober A. Ober A kan met de ontvangen melding van Kok Z
<em>helemaal niets</em>, dus niet communiceren richting Kok Z of Klant K. <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>

## Scenario 5c

*Doel*
<p>Testen op de functionaliteit voor ElementConditions &amp; openSecondaryTransactionsAllowed.</p>

![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A stelt een vraag aan Kok Y en Z. (In de vraagstelling kan Ober A de vraag <em>
niet</em> aanpassen.) <br>
Kok Y beantwoordt de vraag van Ober A. (In de beantwoording kan Kok Y de vraag van Ober A
<em>niet</em> aanpassen.) <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A het antwoord van Kok Y
<em>niet</em> aanpassen.) <br>
Klant K stelt een tweede vraag aan Ober A. (In de vraagstelling kan Klant K de vraag
<em>niet</em> invullen, omdat in het raamwerk de ElementCondition <em>geen</em> waarde voor condition heeft!!!)
<br>
Ober A stelt een tweede vraag aan Kok Y en Z. (In de vraagstelling kan Ober A de vraag
<em>niet</em> aanpassen.) <br>
Kok Z beantwoordt de eerste vraag van Ober A. Ober A kan met de ontvangen melding van Kok Z
<em>helemaal niets</em>, dus niet communiceren richting Kok Z of Klant K. <br>
Kok Z beantwoordt de tweede vraag van Ober A. (In de beantwoording kan Kok Z de vraag van Ober A
<em>niet</em> aanpassen.) <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A het antwoord van Kok Z
<em>niet</em> aanpassen.) <br>
Nadat Ober A naar Klant K heeft gecommuniceerd geeft Kok Y alsnog een antwoord aan Ober A op de tweede vraag. Ober A kan met de ontvangen melding van Kok Y
<em>helemaal niets</em>, dus niet communiceren richting Kok Y of Klant K. <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>


## Scenario 5d

*Doel*
<p>Testen op de functionaliteit voor ElementConditions &amp; openSecondaryTransactionsAllowed.</p>

![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A stelt een vraag aan Kok Y en Z. (In de vraagstelling kan Ober A de vraag <em>
niet</em> aanpassen.) <br>
De beantwoording van Kok Y en Z laat op zich wachten. Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A de vraag van Klant K
<em>niet</em> aanpassen.) <br>
Klant K stelt een tweede vraag aan Ober A. (In de vraagstelling kan Klant K de vraag
<em>niet</em> invullen, omdat in het raamwerk de ElementCondition <em>geen</em> waarde voor condition heeft!!!)
<br>
Ober A stelt een tweede vraag aan Kok Y en Z. (In de vraagstelling kan Ober A de vraag
<em>niet</em> aanpassen.) <br>
Kok Y beantwoordt de eerste vraag van Ober A. Ober A kan met de ontvangen melding van Kok Y
<em>helemaal niets</em>, dus niet communiceren richting Kok Y of Klant K. <br>
Kok Z beantwoordt de eerste vraag van Ober A. Ober A kan met de ontvangen melding van Kok Z
<em>helemaal niets</em>, dus niet communiceren richting Kok Z of Klant K. <br>
Kok Y beantwoordt de tweede vraag van Ober A. (In de beantwoording kan Kok Y de vraag van Ober A
<em>niet</em> aanpassen.) <br>
Ober A beantwoordt de vraag van Klant K. (In de beantwoording kan Ober A het antwoord van Kok Y
<em>niet</em> aanpassen.) <br>
Nadat Ober A naar Klant K heeft gecommuniceerd geeft Kok Z alsnog een antwoord aan Ober A op de tweede vraag. Ober A kan met de ontvangen melding van Kok Z
<em>helemaal niets</em>, dus niet communiceren richting Kok Z of Klant K. <br>
Klant K plaatst een compleet nieuwe bestelling bij Ober A bestaande uit een tabel met per rij de naam van een gerecht en eventueel een bijbehorende opmerking. (Klant K kan de gehele tabel invullen.)
<br>
Ober A plaatst dezelfde bestelling bij Kok X. Ober A kan de bestelling van Klant K niet aanpassen, en ook niet aanvullen.
<br>
Kok X geeft Ober A een akkoord. Kok X kan de bestelling van Ober A niet aanpassen, en ook niet aanvullen.
<br>
Ober A geeft Klant K een akkoord. Ober A kan het akkoord van Kok X niet aanpassen, en ook niet aanvullen.
<br>
Einde.</p>

## Scenario 6a

*Doel*

<p>Testen op de functionaliteit voor een (hoofd)transactie met twee lagen van (sub)transacties.</p>

![Afbeelding](media/)

*Beschrijving*

Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft. Ober A kan het menukaarttype
<em>niet</em> wijzigen. Klant K krijgt de gevraagde menukaart. <br>
Klant K stelt een vraag aan Ober A. <br>
Ober A stelt een vraag aan Kok Y. (In de vraagstelling kan Ober A de vraag <em>niet</em> aanpassen.)
<br>
Kok Y stelt en vraag aan twee keukenhulpen (Keukenhulp N en Keukenhulp O) <br>
Keukenhulp N geeft antwoord aan Kok Y. <br>
Keukenhulp O geeft antwoord aan Kok Y. <br>
Kok Y geeft antwoord aan Ober A als hij een antwoorden van Keukenhulp N en/of O heeft gekregen.
<br>
Ober A geeft vervolgens antwoord aan Klant K. <br>
Klant K is tevreden over het antwoord en plaats zijn/haar bestelling bij Ober A. <br>
Ober A plaats de bestelling bij Kok X <br>
Kok X vraagt Keukenhulp P of hij/zij het recept kan opzoeken. <br>
Keukenhulp P zoekt het recept op en geeft antwoord aan Kok X <br>
Kok X heeft nu het recept en kan akkoord geven aan Ober A <br>
Ober A bevestigt de bestelling aan Klant K</p>
<p>Einde</p>


## Scenario 7a

<p><strong>Doel:</strong></p>
<p>Met dit scenario wordt de juiste werking van de &ldquo;volgordelijkheid van berichten&rdquo; (sendBefore en sendAfter)&nbsp; functionaliteit getest.</p>
<ul>
<li>De ober stuurt een bestelling naar de kok(T3).
<ul>
<li>Hier mag maar 1 van de aanwezige koks gekozen worden. </li><li>De ober mag hierna niet nog een bestelling naar de kok sturen </li></ul>
</li><li>De kok stuurt een vraag aan de keukenhulp (T4). Dit kan op basis van de vraag van de ober (T2), of de bestelling van de ober (T3).
</li><li>De keukenhulp stuurt een antwoord in T4. De kok moet nu kunnen kiezen uit de volgende opties:
<ul>
<li>Als het op basis van een vraag van de ober(T2) was kan hij kiezen uit:
<ul>
<li>Het antwoord doorsturen naar de ober in T2 </li><li>Een nieuwe vraag stellen in T4 </li><li>Melden dat het antwoord niet gebruikt wordt in T4. </li></ul>
</li><li>Als het op basis van een bestelling van de ober was, kan hij kiezen uit:
<ul>
<li>Een akkoord of niet akkoord bericht naar de ober in T3 </li><li>Een nieuwe vraag stellen in T4 </li><li>Melden dat het antwoord niet gebruikt wordt in T4 </li></ul>
</li></ul>
</li><li>Zodra de kok een antwoord naar de ober verzonden heeft in T2 of T3:
<ul>
<li>Kan de kok geen nieuwe vraag meer naar de keukenhulp sturen in T4 </li><li>Kan hij iedere keer nog maar 1 afsluitend bericht naar de keukenhulp sturen in T4. Dit bericht correspondeert met het bericht dat naar de ober ging in T2 of T3.
</li></ul>
</li></ul>


## Scenario 8

*Doel*
<p>Met dit scenario wordt de juiste werking van het Defini&euml;ren van het aantal rijen in een tabel functionaliteit getest. (minOccurs/maxOccurs op child CE)</p>


![Afbeelding](media/)

*Beschrijving*
<ul>
<li>Alleen transactie (T1)
<ul>
<li>Ober stuurt de vraag aan de klant of hij de menukaart wil zien </li><li>Klant antwoordt &ldquo;Ja&rdquo; </li><li>Ober stuurt het bericht &ldquo;Menukaart&rdquo;
<ul>
<li>Bij de de tabel &ldquo;Menukaart&rdquo; testen dat er niet meer dan 3 ingevuld mogen worden en dat hij leeg verzonden kan worden.
</li></ul>
</li><li>Klant antwoordt met &ldquo;Bestelling&rdquo;
<ul>
<li>Bij de tabel &ldquo;Inhoud van de bestelling&rdquo; testen dat er 1 of meer regels ingevuld moeten worden en dat leeg verzenden niet moet kunnen.
</li><li>Bij de tabel &ldquo;Inhoud drankbestelling&rdquo; testen dat er verplicht 1 regel ingevuld moeten worden en dat leeg of meer dan 1 regel niet mag.
</li></ul>
</li></ul>
</li></ul>


## Scenario HTTPS test

<p>Het projectspecifiek bericht wordt voorzien van een SOAP Server met http.</p>
<p>Verwacht resultaat:<br>
Het projectspecifiek bericht wordt niet ingelezen/geweigerd.</p>
<p>Sample Data:<br>
Het projectspecifiek bericht &quot;projectspecifiekberichttotenmetbericht_6.xml&quot;.</p>
<p>&nbsp;</p>
<h2>Scenario Grote bijlagen</h2>
<p>Bij een bericht wordt een zip bestand van 10gb gevoegd. Dit bericht wordt via soap naar een andere server verzonden.</p>
<p>Verwacht resulataat: <br>
Het bericht met de bijlage wordt correct verzonden, de bijlage is op de andere server uit te pakken en de uit de zip gehaalde bestanden zijn leesbaar.</p>
<p>Sample Data:<br>
Ter plekke kan een zip bestand worden aangemaakt.</p>
<p>&nbsp;</p>

## Scenario 9
<p><strong>Doel:</strong></p>
<p>Testen op de functionaliteit voor het verplicht bijvoegen van een bijlage voor een berichttype (appendixMandatory).</p>
<p><strong>Figuur:</strong></p>
<p><img src="http://download-codeplex.sec.s-msft.com/Download?ProjectName=visi&DownloadId=1561663" alt="Scenario 9 - bijlage verplicht" width="800" height="164"></p>
<p><strong>Beschrijving:</strong></p>
<p>Ober A vraagt aan Klant K of hij/zij de kaart wil zien. Klant K beantwoordt de vraag met Ja, en geeft aan welke kaart hij/zij wil zien.
<br>
Ober A biedt de menukaart aan die Klant K gevraagd heeft, ZONDER bijlage.</p>
<p>Ober A kan de menukaart NIET aanbieden aan Klant K, omdat hij een bijlage is vergeten toe te voegen.</p>
<p>Vervolgens biedt Ober A de menukaart aan die Klant K gevraagd heeft, MET bijlage.</p>
<p>Ober A kan de menukaart aanbieden aan Klant K, omdat hij een bijlage heeft toegevoegd.</p>
<p>Klant K ontvangt menukaart met bijlage.</p>
<p>Einde.</p>
<h2>Scenario 10</h2>
<p><strong>Doel:</strong></p>
<p>Testen op de Element conditions in tabellen (Ce normaal / CE parent / CE Child).&nbsp; Sys 1.6 en hoger</p>
<p>&nbsp;</p>
<p><strong>Beschrijving:</strong></p>
<ul>
<li>De ober biedt de menukaart aan </li><li>Klant zegt &ldquo;ja&rdquo; </li><li>Ober vult het menukaart bericht als volgt:
<ul>
<li>Menukaart (bovenste tabel, controleer dat deze naam &ldquo;Menukaart &rdquo; van het CE leesbaar is).
<ul>
<li>Vul 2 regels in, alle cellen moeten waarden bevatten. </li></ul>
</li><li>Dagmenu (middelste tabel, controleer dat deze naam &ldquo;Dagmenu&rdquo; van het CE leesbaar is).
<ul>
<li>Vul 2 regels in, alle cellen moeten waarden bevatten. </li></ul>
</li><li>Drankenkaart (onderste tabel tabel, controleer dat deze naam &ldquo;Drankenkaart&rdquo; van het CE leesbaar is).
<ul>
<li>Vul 2 regels in, alle cellen moeten waarden bevatten. </li></ul>
</li></ul>
</li><li>Klant reageert met het bericht &ldquo;vraag&rdquo;
<ul>
<li>In de &ldquo;Menukaart&rdquo; tabel controleer je:
<ul>
<li>Of de naam van het CE &ldquo;Menukaart&ldquo; zichtbaar is </li><li>De waarden in de kolom Omschrijving en Prijs moeten aan te passen zijn, eerste kolom is niet aanpasbaar. [Naam default fixed / Omschr.&nbsp; se free in deze parent ce (5)/Prijs se free in child ce (3)]
</li><li>Er kunnen <strong>geen</strong> regels verwijderd of toegevoegd worden </li><li>Maak de onderste cel &ldquo;Omschrijving&rdquo; leeg ter voorbereiding op de volgende contole.
</li></ul>
</li><li>In de &ldquo;Dagmenu&rdquo; tabel controleer je:
<ul>
<li>Of de naam van het CE &ldquo;Dagmenu&rdquo; zichtbaar is </li><li>Alleen de kolom Naam is nog gevuld en is aanpasbaar. De andere 2 kolommen zijn leeg. [Parent CE dagmenu EMPTY (4)/Naam se FREE in mitt, parent, child, se(15)/Prijs&nbsp; free in child (3)]
</li><li>Er kunnen <strong>wel</strong> regels verwijderd of toegevoegd worden </li></ul>
</li><li>In de &ldquo;Drankenkaart&rdquo; tabel controleer je:
<ul>
<li>Of de naam van het CE &ldquo;Drankenkaart&rdquo; zichtbaar is </li><li>De kolommen naam en omschrijving zijn aanpasbaar, de kolom prijs is niet aanpasbaar [FREE op parent en child CE (6) / fixed op parent ce, child CE en SE prijs (7)]
</li><li>Er kunnen <strong>geen</strong> regels verwijderd of toegevoegd worden. </li></ul>
</li><li>Verstuur het bericht </li></ul>
</li><li>Ober reageert met het bericht &ldquo;Antwoord&rdquo;
<ul>
<li>Contoleer:
<ul>
<li>er kunnen <strong>geen</strong> regels verwijderd of toegevoegd worden [FREE op child en parent in verkeerde volgorde dus geen geldige conditie. Inhoud van de menukaart moet parent zijn en menukaart moet child zijn om deze conditie werkend te hebben. (nvt)]
</li></ul>
</li></ul>
</li></ul>
<p>Einde.</p>
